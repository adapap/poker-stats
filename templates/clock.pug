extends base.pug

block title
    title Clock

block css
    +stylesheet('clock.css')

block content
    #clock-wrapper
        .clock-item
            .time
                span.hh-mm 00:00
                span.ss 00
        .clock-item Blinds
            .blinds - / -
        .clock-item Ante
            .ante 0
        .next-blind Next Blind

block scripts
    script.
        const ftime = (n) => n.toString().padStart(2, '0')
        $(() => {
            function update_clock(time) {
                let s = ftime(time % 60)
                let m = ftime(Math.floor(time / 60) % 60)
                let h = ftime(Math.floor(time / 60 / 60) % 24)
                let hh_mm = `${h}:${m}`
                let ss = `${s}`
                $('.time .hh-mm').text(hh_mm)
                $('.time .ss').fadeOut(200, function() {
                    $(this).text(ss).fadeIn(300)
                })
            }

            const blinds = #{ blinds }
            var cur_blind = 0
            $('.next-blind').click(() => {
                // Start the next blind
                let [small_blind, big_blind, ante, minutes] = blinds[cur_blind]
                let time = Math.floor(minutes * 60)
                update_clock(time)
                time -= 1

                let blindstr = `${small_blind} / ${big_blind}`
                $('.blinds').text(blindstr)
                $('.ante').text(ante)

                let interval = 1000
                var expected = Date.now() + interval
                setTimeout(step, interval)
                function step() {
                    var dt = Date.now() - expected
                    if (dt > interval) {
                        // Handle large discrepancy
                    }
                    update_clock(time)
                    if (time == 0) {
                        cur_blind += 1
                        return
                    }
                    time -= 1
                    expected += interval
                    setTimeout(step, Math.max(0, interval - dt))
                }
            })
        })